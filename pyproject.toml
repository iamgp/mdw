[project]
name = "data_warehouse"
version = "0.1.0"
description = "Modern Data Warehouse using DuckDB, PostgreSQL, DBT, and Dagster"
authors = [{ name = "Gareth Price", email = "gareth@example.com" }]
dependencies = [
    "click>=8.1.7",
    "loguru>=0.7.2",
    "duckdb>=0.9.2",
    "psycopg[binary]>=3.1.18",
    "dlt>=0.4.5",
    "dbt-core>=1.7.8",
    "dbt-postgres>=1.7.8",
    "dbt-duckdb>=1.7.8",
    "dagster>=1.6.7",
    "dagster-graphql>=1.6.7",
    "dagster-webserver>=1.6.7",
    "owlready2>=0.45",
    "strawberry-graphql>=0.220.0",
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.27.1",
    "pydantic>=2.6.3",
    "pydantic-settings>=2.2.1",
    "python-dotenv>=1.0.1",
    "rich>=13.7.0",
    "minio>=7.2.15",
]
requires-python = ">=3.11"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "pytest-benchmark>=4.0.0",
    "ruff>=0.2.1",
    "basedpyright>=0.1.0",
]

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/data_warehouse"]

[tool.hatch]
version.source = "vcs"
envs.default.dependencies = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "pytest-xdist",
    "pytest-benchmark",
    "ruff",
    "basedpyright",
    "pytest-dev.types>=0.3.1",
    "types-pytest>=7.4.4",
]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
    "PT", # pytest style
]
ignore = ["PT003"] # Ignore fixture scope warning

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.basedpyright]
include = ["src", "tests"]
exclude = ["**/node_modules", "**/__pycache__", "**/.*"]
typeCheckingMode = "off"                                 # Less strict type checking for tests
pythonVersion = "3.11"
pythonPlatform = "Darwin"
venvPath = "."
useLibraryCodeForTypes = true

# Type checking settings
reportMissingImports = "warning"
reportUnknownMemberType = "none"
reportUnknownVariableType = "none"
reportUnknownArgumentType = "none"
reportMissingTypeArgument = "none"
reportUntypedFunctionDecorator = "none"
reportUnknownLambdaType = "none"
reportMissingParameterType = "warning"
reportPrivateImportUsage = "none"
reportUnusedFunction = "warning"
reportGeneralTypeIssues = "none"

# Inference settings
strictListInference = false
strictDictionaryInference = false
strictSetInference = false
strictParameterNoneValue = false

# Other settings
enableTypeIgnoreComments = true
stubPath = "src/stubs"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q --cov=data_warehouse --cov-report=xml --cov-report=term-missing --cov-fail-under=90"
asyncio_mode = "auto"

[project.scripts]
# Entry point for the CLI tool. Run with: data-warehouse [command]
# Environment Variables:
# DATA_WAREHOUSE_ROOT - Optional: Explicitly set the project root directory
data-warehouse = "data_warehouse.cli.main:cli"
